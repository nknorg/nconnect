{"version":3,"sources":["i18n.js","rpc.js","util.js","App.js","index.js"],"names":["resources","en","translation","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","rpcAddr","methods","getAdminToken","method","getAddrs","setAddrs","addAddrs","removeAddrs","getLocalIP","getInfo","getBalance","getSeed","setSeed","setTunaConfig","rpc","hasOwnProperty","addr","params","target","sources","source","Object","keys","key","undefined","util","defaultParams","rpcCall","a","window","rpcHeaders","headers","console","error","axios","url","timeout","withCredentials","data","id","jsonrpc","response","result","Error","acceptAddrs","adminAddrs","seed","tunaConfig","HoverQRCode","props","state","qrCode","QRCode","toDataURL","this","rawData","then","setState","catch","Tooltip","title","src","alt","style","height","verticalAlign","React","Component","App","initialized","activeTab","adminTokenStr","adminTokenQRCode","localIP","language","inPrice","outPrice","tags","balance","tunaServiceName","tunaCountry","tunaConfigChoices","tunaConfigSelected","isTunaConfigChoiceOpen","currentTunaConfig","i","languages","length","handleTabChange","bind","handleAcceptAddrsChange","handleAdminAddrsChange","handleSubmit","updateAdminToken","handleLanguageChange","handleExportAccount","handleImportAccount","openTunaConfigChoice","handleTunaConfigChoiceCancel","handleTunaConfigChoiceOK","handleTunaConfigChoiceChange","event","value","updateInfo","changeLanguage","preventDefault","strToAddrs","addrs","addrsToStr","alert","t","adminToken","JSON","stringify","e","info","ipv4","get","tunaConfigChoicesAddr","Date","now","config","serviceName","country","status","parseFloat","isNaN","averagePrice","mb","gb","toFixed","confirm","currentSeedInput","prompt","trim","newSeed","setInterval","remainingData","estimatedRemainingData","paymentAdditionalParams","currentServerRegionName","item","textId","className","Container","Select","onChange","map","lang","MenuItem","getFixedT","Grid","container","justify","alignItems","xs","sm","direction","onClick","cursor","ArrowDropDown","Button","variant","color","href","addrToPubKey","lng","additionalParams","TabContext","TabList","Tab","label","TabPanel","spacing","List","ListItem","ListItemText","Trans","i18nKey","components","nConnectLink","rel","guideLink","nConnectClientDesktopLink","TextField","disabled","multiline","join","width","paddingBottom","paddingTop","forumLink","emailLink","emailAddress","Dialog","disableBackdropClick","disableEscapeKeyDown","keepMounted","maxWidth","open","DialogTitle","DialogContent","dividers","RadioGroup","index","FormControlLabel","control","Radio","DialogActions","autoFocus","str","split","filter","s","withTranslation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46292f23.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport translationEN from './translations/en.json';\nimport translationZHCN from './translations/zh-CN.json';\nimport translationZHTW from './translations/zh-TW.json';\n\nexport const resources = {\n  en: {\n    translation: translationEN\n  },\n  \"zh-CN\": {\n    translation: translationZHCN\n  },\n  \"zh-TW\": {\n    translation: translationZHTW\n  },\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false,\n    }\n  });\n\nexport default i18n;\n","import axios from 'axios';\n\nimport * as util from './util';\n\nconst rpcAddr = '/rpc/admin';\n\nconst methods = {\n  getAdminToken: { method: 'getAdminToken' },\n  getAddrs: { method: 'getAddrs' },\n  setAddrs: { method: 'setAddrs' },\n  addAddrs: { method: 'addAddrs' },\n  removeAddrs: { method: 'removeAddrs' },\n  getLocalIP: { method: 'getLocalIP' },\n  getInfo: { method: 'getInfo' },\n  getBalance: { method: 'getBalance' },\n  getSeed: { method: 'getSeed' },\n  setSeed: { method: 'setSeed' },\n  setTunaConfig: { method: 'setTunaConfig' },\n}\n\nvar rpc = {};\nfor (let method in methods) {\n  if (methods.hasOwnProperty(method)) {\n    rpc[method] = (addr, params) => {\n      params = util.assignDefined({}, methods[method].defaultParams, params)\n      return rpcCall(addr, methods[method].method, params);\n    }\n  }\n}\n\nasync function rpcCall(addr, method, params = {}) {\n  let headers;\n  try {\n    headers = await window.rpcHeaders;\n  } catch (e) {\n    console.error('Await rpc headers error:', e);\n  }\n\n  let response = await axios({\n    url: addr,\n    method: 'POST',\n    timeout: 10000,\n    headers,\n    withCredentials: true,\n    data: {\n      id: 'nConnect-web',\n      jsonrpc: '2.0',\n      method: method,\n      params: params,\n    },\n  });\n\n  let data = response.data;\n\n  if (data.error) {\n    throw data.error;\n  }\n\n  if (data.result !== undefined) {\n    return data.result;\n  }\n\n  throw new Error('rpc response contains no result or error field');\n}\n\nexport async function getAdminToken() {\n  return rpc.getAdminToken(rpcAddr);\n}\n\nexport async function getAddrs() {\n  return rpc.getAddrs(rpcAddr);\n}\n\nexport async function setAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.setAddrs(rpcAddr, params);\n}\n\nexport async function addAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.addAddrs(rpcAddr, params);\n}\n\nexport async function removeAddrs(acceptAddrs, adminAddrs) {\n  let params = {};\n  if (acceptAddrs) {\n    params.acceptAddrs = acceptAddrs;\n  }\n  if (adminAddrs) {\n    params.adminAddrs = adminAddrs;\n  }\n  return rpc.removeAddrs(rpcAddr, params);\n}\n\nexport async function getLocalIP() {\n  return rpc.getLocalIP(rpcAddr);\n}\n\nexport async function getInfo() {\n  return rpc.getInfo(rpcAddr);\n}\n\nexport async function getBalance() {\n  return rpc.getBalance(rpcAddr);\n}\n\nexport async function getSeed() {\n  return rpc.getSeed(rpcAddr);\n}\n\nexport async function setSeed(seed) {\n  return rpc.setSeed(rpcAddr, { seed });\n}\n\nexport async function setTunaConfig(tunaConfig) {\n  return rpc.setTunaConfig(rpcAddr, tunaConfig);\n}\n","export function assignDefined(target, ...sources) {\n  for (let source of sources) {\n    if (source) {\n      for (let key of Object.keys(source)) {\n        if (source[key] !== undefined) {\n          target[key] = source[key];\n        }\n      }\n    }\n  }\n  return target;\n}\n","import axios from 'axios';\nimport React from 'react';\nimport QRCode from 'qrcode';\nimport { withTranslation, Trans } from 'react-i18next';\nimport {\n  Button, Container, MenuItem, List, ListItem, ListItemText, Tab, TextField,\n  Tooltip, Select, Grid, Dialog, DialogTitle, DialogContent, RadioGroup,\n  FormControlLabel, Radio, DialogActions,\n} from '@material-ui/core';\nimport { TabContext, TabList, TabPanel } from '@material-ui/lab';\nimport { ArrowDropDown } from '@material-ui/icons';\n\nimport i18n, { resources as languages } from './i18n';\nimport * as rpc from './rpc';\n\nimport './App.css';\n\nconst tunaConfigChoicesAddr = '/static/tuna-config-choices.json';\n\nclass HoverQRCode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      qrCode: '',\n    };\n  }\n\n  componentDidMount() {\n    QRCode.toDataURL(this.props.rawData).then(qrCode => {\n      this.setState({qrCode});\n    }).catch(console.error);\n  }\n\n  render() {\n    return (\n      <Tooltip title={<img src={this.state.qrCode} alt=\"QR Code\"/>}>\n        <img src=\"/static/media/qr_code.png\" alt=\"QR Code\" style={{height: '24px', verticalAlign: 'middle'}}/>\n      </Tooltip>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      activeTab: '0',\n      adminTokenStr: '',\n      adminTokenQRCode: '',\n      acceptAddrs: '',\n      adminAddrs: '',\n      addr: '',\n      localIP: [],\n      language: '',\n      inPrice: [],\n      outPrice: [],\n      tags: [],\n      balance: '',\n      tunaServiceName: '',\n      tunaCountry: [],\n      tunaConfigChoices: [],\n      tunaConfigSelected: -1,\n      isTunaConfigChoiceOpen: false,\n      currentTunaConfig: -1,\n    };\n    for (let i = 0; i < i18n.languages.length; i++) {\n      if (languages[i18n.languages[i]]) {\n        this.state.language = i18n.languages[i];\n        break;\n      }\n    }\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.handleAcceptAddrsChange = this.handleAcceptAddrsChange.bind(this);\n    this.handleAdminAddrsChange = this.handleAdminAddrsChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateAdminToken = this.updateAdminToken.bind(this);\n    this.handleLanguageChange = this.handleLanguageChange.bind(this);\n    this.handleExportAccount = this.handleExportAccount.bind(this);\n    this.handleImportAccount = this.handleImportAccount.bind(this);\n    this.openTunaConfigChoice = this.openTunaConfigChoice.bind(this);\n    this.handleTunaConfigChoiceCancel = this.handleTunaConfigChoiceCancel.bind(this);\n    this.handleTunaConfigChoiceOK = this.handleTunaConfigChoiceOK.bind(this);\n    this.handleTunaConfigChoiceChange = this.handleTunaConfigChoiceChange.bind(this);\n  }\n\n  handleTabChange(event, value) {\n    this.setState({activeTab: value});\n    if (value === '4') {\n      this.updateInfo();\n    }\n  }\n\n  handleAcceptAddrsChange(event) {\n    this.setState({acceptAddrs: event.target.value});\n  }\n\n  handleAdminAddrsChange(event) {\n    this.setState({adminAddrs: event.target.value});\n  }\n\n  handleLanguageChange(event) {\n    this.setState({language: event.target.value});\n    i18n.changeLanguage(event.target.value);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      let addrs = await rpc.setAddrs(strToAddrs(this.state.acceptAddrs), strToAddrs(this.state.adminAddrs));\n      this.setState({\n        acceptAddrs: addrsToStr(addrs.acceptAddrs),\n        adminAddrs: addrsToStr(addrs.adminAddrs),\n      });\n      window.alert(this.props.t('save success'));\n    } catch (e) {\n      console.error(e);\n      window.alert(e);\n    }\n  }\n\n  async updateAdminToken() {\n    try {\n      let adminToken = await rpc.getAdminToken();\n      if (adminToken) {\n        let adminTokenStr = JSON.stringify(adminToken);\n        let adminTokenQRCode = await QRCode.toDataURL(adminTokenStr);\n        this.setState({\n          adminTokenStr,\n          adminTokenQRCode,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  updateInfo() {\n    this.updateAdminToken();\n\n    rpc.getAddrs().then((addrs) => {\n      this.setState({\n        acceptAddrs: addrsToStr(addrs.acceptAddrs),\n        adminAddrs: addrsToStr(addrs.adminAddrs),\n      });\n    }).catch((e) => {\n      console.error(e);\n      window.alert(e);\n    });\n\n    rpc.getInfo().then((info) => {\n      let initialized = this.state.initialized;\n      this.setState({\n        initialized: true,\n        addr: info.addr,\n        localIP: info.localIP.ipv4,\n        inPrice: info.inPrice,\n        outPrice: info.outPrice,\n        tags: info.tags,\n        tunaServiceName: info.tunaServiceName || '',\n        tunaCountry: info.tunaCountry || [],\n      });\n      if (!initialized) {\n        axios.get(tunaConfigChoicesAddr + '?t=' + Date.now()).then((response) => {\n          if (response.data && response.data.length) {\n            this.setState({\n              tunaConfigChoices: response.data,\n            });\n            for (let i = 0; i < this.state.tunaConfigChoices.length; i++) {\n              if (this.state.tunaConfigChoices[i].config.serviceName === this.state.tunaServiceName) {\n                if (JSON.stringify(this.state.tunaConfigChoices[i].config.country) === JSON.stringify(this.state.tunaCountry)) {\n                  this.setState({\n                    tunaConfigSelected: i,\n                    currentTunaConfig: i,\n                  });\n                  break;\n                }\n              }\n            }\n            if (this.state.tunaConfigSelected < 0 && !this.state.tunaServiceName && !(this.state.tunaCountry && this.state.tunaCountry.length)) {\n              this.openTunaConfigChoice();\n            }\n          }\n        }).catch((e) => {\n          if (e.response.status !== 404) {\n            console.error(e);\n          }\n        });\n      }\n    }).catch((e) => {\n      console.error(e);\n    });\n\n    if (!this.state.balance) {\n      rpc.getBalance().then((balance) => {\n        this.setState({balance});\n      }).catch((e) => {\n        console.error(e);\n      });\n    }\n  }\n\n  estimatedRemainingData() {\n    if (!this.state.balance) {\n      return null;\n    }\n\n    if (!(this.state.inPrice && this.state.inPrice.length) && !(this.state.outPrice && this.state.outPrice.length)) {\n      return null;\n    }\n\n    let balance = parseFloat(this.state.balance);\n    if (isNaN(balance)) {\n      return null;\n    }\n\n    let averagePrice = 0;\n    for (let i = 0; i < this.state.inPrice.length; i++) {\n      averagePrice += parseFloat(this.state.inPrice[i]);\n    }\n    for (let i = 0; i < this.state.outPrice.length; i++) {\n      averagePrice += parseFloat(this.state.outPrice[i]);\n    }\n    averagePrice /= (this.state.inPrice.length + this.state.outPrice.length);\n    if (isNaN(averagePrice)) {\n      return null;\n    }\n\n    if (averagePrice === 0) {\n      return null;\n    }\n\n    let mb = balance / averagePrice;\n    let gb = mb / 1024;\n    if (gb > 1) {\n      return gb.toFixed(1) + ' GB';\n    }\n    return mb.toFixed(0) + ' MB';\n  }\n\n  async handleExportAccount(event) {\n    event.preventDefault();\n\n    if (!window.confirm(this.props.t('exportConfirm'))) {\n      return;\n    }\n\n    try {\n      let seed = await rpc.getSeed();\n      window.alert(this.props.t('exportSuccess', {seed}));\n    } catch (e) {\n      console.error(e);\n      window.alert(e);\n    }\n  }\n\n  async handleImportAccount(event) {\n    event.preventDefault();\n\n    if (!window.confirm(this.props.t('importConfirm'))) {\n      return;\n    }\n\n    let currentSeedInput = window.prompt(this.props.t('importPromptCurrent'));\n    if (!currentSeedInput) {\n      return;\n    }\n\n    try {\n      let currentSeed = await rpc.getSeed();\n      if (currentSeed !== currentSeedInput.trim()) {\n        window.alert(this.props.t('importWrongCurrent'));\n        return;\n      }\n    } catch (e) {\n      console.error(e);\n      window.alert(e);\n      return;\n    }\n\n    let newSeed = window.prompt(this.props.t('importPromptNew'));\n    if (!newSeed) {\n      return;\n    }\n\n    try {\n      await rpc.setSeed(newSeed.trim());\n      window.alert(this.props.t('importSuccess'));\n    } catch (e) {\n      console.error(e);\n      window.alert(e);\n    }\n  }\n\n  openTunaConfigChoice() {\n    this.setState({\n      isTunaConfigChoiceOpen: true,\n    });\n  }\n\n  handleTunaConfigChoiceCancel() {\n    this.setState({\n      isTunaConfigChoiceOpen: false,\n    });\n  }\n\n  async handleTunaConfigChoiceOK() {\n    this.setState({\n      isTunaConfigChoiceOpen: false,\n      currentTunaConfig: this.state.tunaConfigSelected,\n    });\n    if (this.state.tunaConfigSelected >= 0) {\n      try {\n        await rpc.setTunaConfig(this.state.tunaConfigChoices[this.state.tunaConfigSelected].config);\n        window.alert(this.props.t('setTunaConfigSuccess'));\n      } catch (e) {\n        console.error(e);\n        window.alert(e);\n      }\n    }\n  }\n\n  handleTunaConfigChoiceChange(event) {\n    this.setState({\n      tunaConfigSelected: event.target.value,\n    });\n  }\n\n  componentDidMount() {\n    this.updateInfo();\n    setInterval(this.updateAdminToken, 5 * 60 * 1000);\n  }\n\n  render() {\n    let remainingData = this.estimatedRemainingData();\n    let paymentAdditionalParams = '';\n    if (this.state.tags && this.state.tags.length) {\n      for (let i = 0; i < this.state.tags.length; i++) {\n        paymentAdditionalParams += '&tag=' + this.state.tags[i];\n      }\n    }\n    let currentServerRegionName = '';\n    if (this.state.tunaConfigChoices && this.state.tunaConfigChoices.length) {\n      if (this.state.currentTunaConfig >= 0) {\n        let item = this.state.tunaConfigChoices[this.state.currentTunaConfig];\n        currentServerRegionName = this.props.t(item.textId) || item.textId;\n      } else {\n        currentServerRegionName = this.props.t('customized');\n      }\n    }\n    return (\n      <div className=\"App\">\n        <Container>\n          <div className=\"language-switcher\">\n            <Select\n              value={this.state.language}\n              onChange={this.handleLanguageChange}\n            >\n              {\n                Object.keys(languages).map((lang) => {\n                  return (\n                    <MenuItem key={lang} value={lang}>{i18n.getFixedT(lang)('language')}</MenuItem>\n                  )\n                })\n              }\n            </Select>\n          </div>\n\n          <div className=\"row\">\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item xs={12} sm={6} className=\"text-left\">\n                <img src=\"/static/media/nkn_logo.png\" alt=\"NKN logo\"/>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Grid container\n                      direction=\"row\"\n                      justify=\"flex-end\"\n                      alignItems=\"center\">\n                  <Grid item xs>\n                    <div className=\"row text-right\">\n                      {\n                        currentServerRegionName && (\n                          <span>\n                        {this.props.t('currentServerRegion') + ': '}\n                            <span onClick={this.openTunaConfigChoice} style={{cursor: 'pointer'}}>\n                          {currentServerRegionName}\n                              <ArrowDropDown style={{verticalAlign: 'middle'}}/>\n                        </span>\n                      </span>\n                        )\n                      }\n                    </div>\n                    <div className=\"row text-right\">\n                      {remainingData && (this.props.t('estimatedRemainingData') + ': ' + remainingData)}\n                    </div>\n                  </Grid>\n                  <Grid item xs={4} className=\"text-right\">\n                    <Button variant=\"contained\" color=\"primary\" target=\"_blank\" href={this.props.t('paymentLink', {\n                      addr: addrToPubKey(this.state.addr),\n                      lng: this.state.language,\n                      additionalParams: paymentAdditionalParams\n                    })}>\n                      {this.props.t('data plan tab')}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n\n          <TabContext value={this.state.activeTab}>\n            <TabList onChange={this.handleTabChange} className=\"bottom-line\">\n              <Tab label={this.props.t('mobile tab')} value=\"0\"/>\n              <Tab label={this.props.t('desktop tab')} value=\"1\"/>\n              <Tab label={this.props.t('advanced tab')} value=\"2\"/>\n              <Tab className=\"margin-left-auto\" label={this.props.t('need help tab')} value=\"3\"/>\n            </TabList>\n            <TabPanel value=\"0\">\n              <Grid container spacing={10} justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} sm={6} className=\"text-right\">\n                  <img src={this.state.adminTokenQRCode} alt=\"QR Code\"/>\n                </Grid>\n                <Grid item xs={12} sm={6} className=\"text-left\">\n                  <div>{this.props.t('export tip')}</div>\n                </Grid>\n              </Grid>\n              <List>\n                <ListItem>\n                  <ListItemText>\n                    <Trans\n                      i18nKey=\"download nConnect\"\n                      components={{\n                        nConnectLink: <a target=\"_blank\" rel=\"noopener noreferrer\"\n                                         href={this.props.t('nConnectLink')}/>,\n                        QRCode: <HoverQRCode rawData={this.props.t('nConnectLink')}/>,\n                      }}\n                    />\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>\n                    {this.props.t('add device from mobile')}\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>\n                    {this.props.t('connect from mobile')}\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemText>\n                    <Trans\n                      i18nKey=\"mobile guide\"\n                      components={{\n                        guideLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('getStartedLink')}/>,\n                      }}\n                    />\n                  </ListItemText>\n                </ListItem>\n              </List>\n            </TabPanel>\n            <TabPanel value=\"1\">\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"add device in mobile first\"\n                    components={{\n                      nConnectLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nConnectLink')}/>,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"add server from desktop\"\n                    components={{\n                      nConnectClientDesktopLink: <a target=\"_blank\" rel=\"noopener noreferrer\"\n                                                    href={this.props.t('nConnectClientDesktopLink')}/>,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('scan QR code to add server to desktop')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('connect from desktop')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"desktop guide\"\n                    components={{\n                      guideLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('getStartedLink')}/>,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n            </TabPanel>\n            <TabPanel value=\"2\">\n              <div className=\"advanced-row\">\n                <TextField\n                  disabled\n                  multiline\n                  label={this.props.t('local IP address')}\n                  value={this.state.localIP.join('\\n')}\n                  style={{width: '100%'}}\n                />\n              </div>\n              <div className=\"advanced-row\">\n                <TextField\n                  disabled\n                  multiline\n                  label={this.props.t('access key')}\n                  value={this.state.adminTokenStr}\n                  style={{width: '100%'}}\n                />\n              </div>\n              <div className=\"advanced-row\">\n                <TextField\n                  multiline\n                  variant=\"filled\"\n                  label={this.props.t('accept addresses')}\n                  value={this.state.acceptAddrs}\n                  onChange={this.handleAcceptAddrsChange}\n                  style={{width: '100%'}}\n                />\n                <TextField\n                  multiline\n                  variant=\"filled\"\n                  label={this.props.t('admins')}\n                  value={this.state.adminAddrs}\n                  onChange={this.handleAdminAddrsChange}\n                  style={{width: '100%'}}\n                />\n              </div>\n              <div className=\"advanced-row\">\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.handleSubmit}\n                  style={{width: '100%'}}\n                >\n                  {this.props.t('save')}\n                </Button>\n              </div>\n              <div className=\"advanced-row\">\n                <div style={{paddingBottom: '5px'}}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={this.handleExportAccount}\n                    style={{width: '100%'}}\n                  >\n                    {this.props.t('export account')}\n                  </Button>\n                </div>\n                <div style={{paddingTop: '5px'}}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={this.handleImportAccount}\n                    style={{width: '100%'}}\n                  >\n                    {this.props.t('import account')}\n                  </Button>\n                </div>\n              </div>\n            </TabPanel>\n            <TabPanel value=\"3\">\n              <ListItem>\n                <ListItemText>\n                  {this.props.t('need help method')}\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"create forum post\"\n                    components={{\n                      forumLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('forumLink')}/>,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"Q&A\"\n                    components={{\n                      'QALink': <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('QALink')}/>,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"send email\"\n                    components={{\n                      emailLink: <a href={'mailto:' + this.props.t('emailAddress')}/>,\n                      emailAddress: this.props.t('emailAddress'),\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemText>\n                  <Trans\n                    i18nKey=\"mobile customer service\"\n                    components={{\n                      nConnectLink: <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.t('nConnectLink')}/>,\n                    }}\n                  />\n                </ListItemText>\n              </ListItem>\n            </TabPanel>\n          </TabContext>\n          <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            keepMounted\n            maxWidth=\"xs\"\n            open={this.state.isTunaConfigChoiceOpen}\n          >\n            <DialogTitle>{this.props.t('tunaConfigChoiceTitle')}</DialogTitle>\n            <DialogContent dividers>\n              <RadioGroup\n                value={`${this.state.tunaConfigSelected}`}\n                onChange={this.handleTunaConfigChoiceChange}\n              >\n                {\n                  this.state.tunaConfigChoices.map((item, index) => (\n                    <FormControlLabel\n                      value={`${index}`}\n                      key={`${index}`}\n                      control={<Radio/>}\n                      label={this.props.t(item.textId) || item.textId}\n                    />\n                  ))\n                }\n              </RadioGroup>\n            </DialogContent>\n            <DialogActions>\n              <Button autoFocus onClick={this.handleTunaConfigChoiceCancel} color=\"primary\">\n                {this.props.t('cancel')}\n              </Button>\n              <Button onClick={this.handleTunaConfigChoiceOK} color=\"primary\">\n                {this.props.t('save')}\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction addrsToStr(addrs) {\n  if (!addrs) {\n    return '';\n  }\n  return addrs.join('\\n');\n}\n\nfunction strToAddrs(str) {\n  if (!str) {\n    return [];\n  }\n  return str.split('\\n').filter(s => s.length > 0);\n}\n\nfunction addrToPubKey(addr) {\n  let s = addr.split('.');\n  return s[s.length - 1];\n}\n\nexport default withTranslation()(App);\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto';\nimport './index.css';\nimport './i18n';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}